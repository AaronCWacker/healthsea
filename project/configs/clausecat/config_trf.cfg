[paths]
train = null
dev = null
vectors = ${paths.ner_model}
init_tok2vec = null
ner_model = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "en"
pipeline = ["sentencizer","ner","benepar","segmentation","clausecat","aggregation"]
batch_size = 128
disabled = []
before_creation = null
after_creation = null
after_pipeline_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]

[components.aggregation]
factory = "healthsea.aggregation"

[components.sentencizer]
factory = "sentencizer"

[components.ner]
source = ${paths.ner_model}
component = "ner"

[components.benepar]
factory = "benepar"
model = "benepar_en3"

[components.segmentation]
factory = "healthsea.segmentation"

[components.clausecat]
factory = "healthsea.clausecat"
threshold = 0.5

[components.clausecat.model]
@architectures = "healthsea.clausecat_model"

[components.clausecat.model.blinder]
@layers = "healthsea.blinder"

[components.clausecat.model.textcat]
@architectures = "spacy.TextCatEnsemble.v2"
nO = null

[components.clausecat.model.textcat.linear_model]
@architectures = "spacy.TextCatBOW.v2"
exclusive_classes = true
ngram_size = 1
no_output_layer = false
nO = null

[components.clausecat.model.textcat.tok2vec]
@architectures = "spacy-transformers.TransformerModel.v3"
name = "roberta-base"

[components.clausecat.model.textcat.tok2vec.get_spans]
@span_getters = "spacy-transformers.strided_spans.v1"
window = 128
stride = 96

[components.clausecat.model.textcat.tok2vec.tokenizer_config]
use_fast = true

[corpora]

[corpora.dev]
@readers = "healthsea.clausecat_reader"
path = ${paths.dev}

[corpora.train]
@readers = "healthsea.clausecat_reader"
path = ${paths.train}

[training]
accumulate_gradient = 3
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
patience = 1600
max_epochs = 0
max_steps = 20000
eval_frequency = 200
frozen_components = ["transformer","ner"]
annotating_components = []
before_to_disk = null

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = true

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001

[training.optimizer.learn_rate]
@schedules = "warmup_linear.v1"
warmup_steps = 250
total_steps = 20000
initial_rate = 0.00005

[training.score_weights]
cats_score = 1.0
cats_score_desc = null
cats_micro_p = null
cats_micro_r = null
cats_micro_f = null
cats_macro_p = null
cats_macro_r = null
cats_macro_f = null
cats_macro_auc = null
cats_f_per_type = null
cats_macro_auc_per_type = null
sents_p = null
sents_r = null
sents_f = null
ents_f = null
ents_p = null
ents_r = null
ents_per_type = null

[initialize]
vectors = ${paths.vectors}
init_tok2vec = ${paths.init_tok2vec}
vocab_data = null
lookups = null
before_init = null
after_init = null

[initialize.components]

[initialize.tokenizer]